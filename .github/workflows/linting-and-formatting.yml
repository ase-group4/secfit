name: Linting & Formatting

# Triggers workflow on pushes and pull requests to main branch.
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest

    # Sets up a black and flake8 as 'variables' for the workflow.
    strategy:
      matrix:
        linter: [black, flake8]
        include:
          - linter: black
            flags: --check # Appended to 'black' command.
          - linter: flake8
            flags: --config=backend/.flake8 # Appended to 'flake8' command.
      fail-fast: false

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install ${{ matrix.linter }}
        run: pip install ${{ matrix.linter }}

      - name: Run ${{ matrix.linter }}
        run: ${{ matrix.linter }} backend ${{ matrix.flags }}

  frontend:
    name: Frontend
    runs-on: ubuntu-latest

    # Sets up prettier and eslint as 'variables' for the workflow.
    strategy:
      matrix:
        linter: [prettier, eslint]
        include:
          - linter: prettier
            command: format -- --check . # Appended to 'npm run'.
          - linter: eslint
            command: lint -- . # Appended to 'npm run'.
      fail-fast: false

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      # Cache npm dependencies for faster subsequent workflows.
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: npm-

      # Uses pre-installed npm on GitHub Ubuntu VM
      # See version here:
      # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-Readme.md#package-management
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci --ignore-scripts

      - name: Run ${{ matrix.linter }}
        working-directory: ./frontend
        run: npm run ${{ matrix.command }}
